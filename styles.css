/*
    Certain types of motion-based animations can cause discomfort for
    some users. In particular, people with vestibular disorders have
    sensitivity to certain motion triggers.

    The @media at-rule has a media feature called prefers-reduced-motion
    to set CSS based on the user's preferences. It can take one of the
    following values:

    reduce
    no-preference

    @media (feature: value) {
        selector {
            styles
        }
    }
    Wrap the style rule that sets scroll-behavior: smooth within
    an @media at-rule with the media feature prefers-reduced-motion
    having no-preference set as the value.
*/

@media (prefers-reduced-motion: no-preference) {
    * {
      scroll-behavior: smooth;
    }
}

body {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

/*
    A useful property of an SVG (scalable vector graphics) is that it
    contains a path attribute which allows the image to be scaled
    without affecting the resolution of the resultant image.

    Currently, the img is assuming its default size, which is too
    large. CSS has a max function which returns the largest of a
    set of comma-separated values. For example:

    img {
        width: max(250px, 25vw);
    }

    In this example, img elements will have a minimum width of
    250px. And as the viewport grows, the image will grow
    accordingly to be 25 percent of the viewport width.

    -----------

    As described in the freeCodeCamp Style Guide, the logo should
    retain an aspect ratio of 35 / 4, and have padding around the text.

    First, change the background-color to #0a0a23 so you can see
    the logo. Then, use the aspect-ratio property to set the
    desired aspect ratio to 35 / 4. Finally, add a padding of
    0.4rem all around.
*/
#logo {
    width: max(100px, 18vw);
    background-color: #0a0a23;
    aspect-ratio: 35/4;
    padding: 0.4rem;
}

header {
    width: 100%;
    height: 50px;
    background-color: #1b1b32;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: fixed;
    top: 0;
}

h1 {
    color: #f1be32;
    font-size: min(5vw, 1.2em);
    text-align: center;
}

main {
    padding-top: 40px;
}

nav > ul {
    display: flex;
    justify-content: space-evenly;
    flex-wrap: wrap;
    align-items: center;
    padding-inline-start: 0;
    margin-block: 0;
    height: 100%;
}

h1, h2 {
    font-family: Verdana, sans-serif;
}

h2 {
    border-bottom: 4px solid #dfdfe2;
    margin-top: 0;
    padding-top: 60px;
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/*
    To prevent unnecessary repetition, target the before
    pseudo-element of the p element, and give it a content
    property of "Question #".
*/
p::before {
    content: "Question #";
}

nav > ul > li {
    color: #dfdfe2;
    margin: 0 0.2rem;
    padding: 0.2rem;
    display: block;
}

/*
    Step 46
    On the topic of visual accessibility, contrast between elements
    is a key factor. For example, the contrast between the text and
    the background of a heading should be at least 4.5:1.

    Change the font color of all the anchor elements within the list
    elements to something with a contrast ratio of at least 7:1.
*/
li > a {
    color: #fff;
    text-decoration: none;
}

nav > ul > li:hover {
    background-color: #dfdfe2;
    color: #1b1b32;
    cursor: pointer;
}

section {
    width: 80%;
    margin: auto;
    margin-top: 0;
    margin-bottom: 10px;
    max-width: 600px;
}

.info {
    padding: 10px 0 0 5px;
}

.formrow {
    margin-top: 30px;
    padding: 0 15px;
}

input {
    font-size: 16px;
}

.info input {
    width: 50%;
    text-align: left;
}

.info label {
    width: 10%;
    min-width: 55px;
    text-align: right;
}

.info label, .info input {
    display: inline-block;
}

.question-block {
    text-align: left;
    display: block;
    width: 100%;
    margin-top: 20px;
    padding-top: 5px;
}

p {
    margin-top: 5px;
    padding-left: 15px;
    font-size: 20px;
}

.question {
    border: none;
    padding-bottom: 0;
}

.answers-list {
    list-style: none;
    padding: 0;
}

button {
    display: block;
    margin: 40px auto;
    width: 40%;
    padding: 15px;
    font-size: 23px;
    background: #d0d0d5;
    border: 3px solid #3b3b4f;
}

footer {
    background-color: #2a2a40;
    display: flex;
    justify-content: center;
}

footer, footer a  {
    color: #dfdfe2;
}

address {
    text-align: center;
    padding: 10px;
}
